package go_bitmap

import (
	"encoding/hex"
	"os"
	"testing"
)

func TestBitMap_LoadRLE(t *testing.T) {
	s := "cacd0181ad01c00aac01c0008c018b8b018b018b018b018b016b016b016b016b016b016b010b81ad010681ad010b868c018c01ac01ac01ac01ac01718c0107818b010f8cad01ad01ad01ac01ac01ad01ad01ad01ac01ac01ad01ad0108758c0105878b018b018b018b016b016b01ce010e69ad010682ac01ac01000181ce0172cd010486ad01ad01ac01ac01ac01ac01cd200013818b010983ad01ad01ad01076dad016bac016b8c0106876b018b018b016b016b01ce01cd011d83ad018c018c010e90ac01ac018c018c018c018c018b018b018b016b016b016b018b018b016b016b0171cd016fad0188ac01ac01ac01ac01ad01ac01ac01ad0110816b011773ad010185ac01ac01ad01ad01ad0169ac011983ce01cd01cd0175ad0115818b010c87ad01ad01cd01cd01cd01cd01cd011787ad01cd01ad01ad01ad01ad01ad011d86ad01ad01ad01cd01cd01cd016ead0185cd01ad01ad01cd01cd016ead0108988c018c018c016b016b018b018b018b018b018b01cd01cd01cd01cd01cd01cd01cd01ad01ad01ad01ad01cd01cd01cd010882cd01cd010681ad010795cd01cd01cd01cd01ad01ad01ac01ac01ac01ac018c018c018c018c018c018b018b018c018c018b018b010d82cd01cd011169ad0166cd010181ac011482ce01ce016ccd010881ad010d93ad01ad01ad01ac01ac01ac01ac01ac01ac01ac018c018c018c018c018c018c01ac018c018c01096ecd01096fad0168ac010606886b018b018b018b018b018b01ce01ce016fcd01058fcd01cd01cd01ad01ad01ad01ad01ad01cd01cd01ad01ad01ad01ad01ad016bac01018fac01ac01ac018c018c01ac018c018c018c018b018b018b018b016b016b011181cd01000e82ee01ee0171cd010ad051600001000000000000c0000000818c01000382cd01cd0119858c018c018c018c018c010fc803000784ce01ce01ce01ce010683ad01cd01cd0168ad01056e8c01878b016b016b016b016b016b016b016ace01068aee01ee01ee01ee01ee01cd01cd01cd01cd01cd010681cd01096f8c0101888b018b018b018b016b016b01ce01ce014303000066cd0186ad01ad01ad01ac01ad01ac0114666b0170cd011167ac01718c01676b01000068ac0113858b018b018b018b018b011583ee01ee01ee010e668c0181ac010e856b016b016b016b016b010e6aee010682ad01ad010b81ac0109898b018b018b018b016b016b018b018b018b011793ce01ce01ce01ce01cd01cd01cd01cd01cd01cd01ad01ad01ad01ac01ac01ac01ac01ac01ac01718c01678b0101290f8ace01ce01cd01cd01cd01cd01cd01ad01ad01ad011390ac01ac01ac01ac018c018c018b018b018b018b01ce01ce01ce01ee01ee01ee010f67ee01048ecd01cd01ad01ad01ad01ad01ac01ac01ac01ac01ac018c018c01ac016e8c01068cee01ee01ee01ee01ee01ce01ce01ee01cd01cd01cd01ce01158acd01cd01ad01ad01ad01ac01ac01ac01ac01ac010e8f8b018b018b018b018b01ee01ee01ee01ee01ee01ee01ce01ce01ce01ce0174ee018cce01ce01cd01cd01cd01cd01cd01cd01ad01ad01ad01ad016bac0106828c018c01d50700070000000083ad01ad01ad016dac01116fee0181ce010f8dcd01ad01ad01ad01ac01ac01ac01ac01ac018c018c01ac01ac016e8c01830f020f02ef01000284ad01ad01ad01ac0119840f020f02ef01ef0178ee010787cd01ad01ad01ad01ad01ad01ac01748c0105850f020f020f020f02ef010a82ce01ce011088cd01cd01cd01ad01ad01ac01ac01ac0112812f026a0f02810e021d83cd01ad01ad01108aac01ac01ac01ac010f020f020f020f020f022f021888ee01ce01cd01cd01cd01ce01cd01ce010686ad01ac01ac01ac018c01ac010b8f8c018c01ac01ef010f020f022f020f020f020f020f020e020e020e02ee010682ce01ce01079fce01ee01ee01ee01ee01ee01ce01ce01ce01ce01ce01ce01cd01cd01cd01cd01cd01cd01ad01ad01ac01ac01ac01ac01ac018c018c01ac01ac01ac01ac01068aee010f020f020f020f02ee01ee01ee010e020e0268ee010f84ee01ce01ce01ce0169cd010181ad0170ac01810f02076aee0108800ece01ce01ce01ee01ee01ee01ee01ce01ce01ee01ee01ce01ce01ce01ce01ce01ce01ce01cd01cd01cd01cd01cd01cd01cd01ad01ad01ad01ac01ac01ac01ac01ac018c01ac01ac01ac01ac01ef01ee01ef01ef010f020e020e020e026dee010675ee0188ce01cd01cd01cd01cd01cd01ad01ad0168ac010188ef010f020f020f020f020f020f020e02600aee010385cd01ad01ad01ad01ad010e810e02000d89cd01cd01cd01cd01cd01ad01ad01ad01ad016a0f0289ef01ee010e020e02ee01ee010e020e020e0200008fee01ee01ce01cd01cd01cd01cd01cd01cd01cd01ad01ad01ad0110021002730f020289ef01ef01ee01ee010f020f020f020f020f021583ee01ce01ce0168cd016630020f8a0f02ef01ef01ef01ef010f020f020f020f020f027bee0186ce01ce01cd01cd01ad01ad0106811002790f021785ce01ce01cd01cd01cd010687500230023002300230023002100217c60100860f020f020f02ef01ee010e020667cd0166ad018bac015102510251025002300230023002300210021002166a0f02800bef01ee01ee01ee01ee01ee01ce01cd01cd01cd01cd01ad01ad01ad01ad01ad01ad01ac01ad01ac01ac01ac01510251025102510230023002300230023002100210020f022f022f022f022f02300230023002300230021083ee01ef01ef0168ee010369ad019cac01ad01ac01ac015102510251023102300231023102300230023002300250023002300230023002500230023002300230023002300230020871ee0184ce01ce01ce01ce016acd018000ad01510251025102510251025102510231023102310230025002500250023002300250025002300230023002300230020f020f020f020f020f020f02ef01ef0178ee010481ee010b99300230023002300250023002300230023002300230023002100210020f020f020f020f020f02ef01ef01ef01ef01ef01ef011b9bcd01cd01cd01cd01ad0151025002500250025002500230023002300230023002300230021002100210020f020f020f02ef01ef01ef01740f02830e020e020e02128fcd01500250025002500230023002300230023002300210020f020f020f0268ef01166bee01098530023002300230021002760f02812f020d83ef01ef01ee01068ece01ce01ce01cd01ed01ed01cd01cd01cd01cd01cd01ce01cd01cd016a0f029f10022f022f022f022f0230022f022f022f022f020f022f0230023002300230020f020f020f020f020f020f020f02ef01ef01ef010f020f020f02ef01ef010981ee010981ce0109901002100230023002300230025002500250025002500230023002300230022f02710f020369ee010366cd01047530026c0f0286ef01ef01ef010f020f02ef0119855002500250025002500206811002d04820000701000000000060000182100210020f810f021584ce01ce01cd01cd01"
	data, _ := hex.DecodeString(s)

	bitmap := NewBitmapFromRLE(&Option{
		Width: 64, Height: 64, BitPerPixel: 16, Data: data,
	})

	pngData := bitmap.ToPng()
	_ = os.WriteFile("./1.png", pngData, 0644)
}
